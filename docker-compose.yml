# docker-compose for running the entire application stack locally

services:
  # React frontend service
  web-app:
    container_name: web-app
    build:
      context: ./frontend/recipify
      dockerfile: Dockerfile.dev
    volumes:
      - ./frontend/recipify:/app
      # - /app/node_modules
    environment:
      - VITE_API_URL=http://localhost:8000/
      - VITE_SEARCH_API_URL=http://localhost:8000/search/
    ports:
      - "3000:3000"
    depends_on:
      - web-api
    networks:
      - recipify_network

  # Django backend service
  web-api:
    container_name: web-api
    build: ./backend/
    command: "python manage.py runserver 0.0.0.0:8000"
    env_file:
      - ./.env.web-api
    volumes:
      - ./backend/recipify:/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - recipify_network

  # Postgres database service
  postgres:
    container_name: postgres
    image: postgres:16
    env_file:
      - ./.env.postgres
    ports:
      - "5432:5432"
    volumes:
      - ./recipify_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    networks:
      - recipify_network

  # Elasticsearch service
  elasticsearch:
    container_name: elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:8.15.1
    environment:
      - cluster.name="recipify"
      - discovery.type=single-node
      - network.host=0.0.0.0
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
      - xpack.security.enabled=true
    env_file:
      - ./.env.elasticsearch
    volumes:
      - ./es_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
    networks:
      - recipify_network

  # Kibana service
  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.15.1
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - server.host=0.0.0.0
      - xpack.security.enabled=false
    env_file:
      - ./.env.kibana
    volumes:
      - ./kibana_data:/usr/share/kibana/data
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - recipify_network

networks:
  recipify_network:
    driver: bridge
